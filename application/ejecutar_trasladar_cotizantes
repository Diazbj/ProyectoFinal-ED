#!/bin/bash

# Configuración de timestamps y directorios
timestamp=$(date +"%Y%m%d_%H%M%S")
base_dir=$(pwd)
parent_dir=$(dirname "$base_dir")
log_dir="$base_dir/logs/traslado_cotizantes"
temp_dir="$log_dir/temp"
output_file="$log_dir/traslado_${timestamp}.log"
error_file="$log_dir/error_${timestamp}.log"
temp_output="$temp_dir/temp_output_${timestamp}.txt"
temp_error="$temp_dir/temp_error_${timestamp}.txt"

# Crear estructura de directorios
mkdir -p "$log_dir" "$temp_dir"

# Función de limpieza
cleanup() {
    if [ -f "$temp_output" ]; then rm "$temp_output"; fi
    if [ -f "$temp_error" ]; then rm "$temp_error"; fi
}

# Registrar inicio de ejecución
echo "=== Inicio de ejecución: $(date) ===" | tee -a "$output_file"

# Cambiar al directorio del proyecto
cd "$parent_dir" || {
    echo "Error: No se pudo acceder al directorio del proyecto" | tee -a "$error_file"
    exit 1
}

# Compilar y empaquetar con Maven
echo "Compilando proyecto con Maven..." | tee -a "$output_file"
if ! mvn clean package -DskipTests > "$temp_output" 2> "$temp_error"; then
    echo "Error: Falló la compilación con Maven" | tee -a "$error_file"
    echo "Detalles del error:"
    cat "$temp_error" | tee -a "$error_file"
    cleanup
    exit 1
fi

# Ejecutar el traslado de cotizantes
echo "Ejecutando traslado de cotizantes..." | tee -a "$output_file"
if ! java -jar application/bin/proyectofinaled-1.0-SNAPSHOT-jar-with-dependencies.jar trasladarSolicitudCotizantesAprobados > "$temp_output" 2> "$temp_error"; then
    echo "Error: Falló la ejecución del programa" | tee -a "$error_file"
    echo "Detalles del error:"
    cat "$temp_error" | tee -a "$error_file"
    cleanup
    exit 1
fi

# Registrar finalización
echo "=== Fin de ejecución: $(date) ===" | tee -a "$output_file"
echo "Proceso completado exitosamente." | tee -a "$output_file"
echo "Logs guardados en:"
echo "- Output: $output_file"
echo "- Errores: $error_file"

# Limpieza final
cleanup
